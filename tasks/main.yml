---
- name: check for kafka installation..
  become: yes
  stat:
    path: '{{ kafka_install_dir }}'
  changed_when: false
  register: kafka_binary
- when: not kafka_binary.stat.exists
  block:
    - name: download kafka tgz...
      become: yes
      become_user: root
      get_url:
        url: '{{ kafka_tgz_url }}'
        dest: /tmp/{{ kafka_tgz }}
        mode: '0644'
        timeout: '{{ kafka_download_timeout_seconds }}'
        checksum: '{{ kafka_checksum }}'
    - name: 'ensure {{ kafka_install_parent_dir }} exists'
      become: yes
      become_user: root
      file:
        path: '{{ kafka_install_parent_dir }}'
        state: directory
        mode: '0755'
    - name: unarchive...
      become: yes
      become_user: root
      unarchive:
        remote_src: yes
        src: /tmp/{{ kafka_tgz }}
        dest: '{{ kafka_install_parent_dir }}'
        creates: '{{ kafka_install_dir }}'
  always:
    - name: delete archive...
      become: yes
      become_user: root
      file:
        path: /tmp/{{ kafka_tgz }}
        state: absent

- name: link...
  become: yes
  become_user: root
  file:
    src: '{{ kafka_install_dir }}'
    dest: '{{ kafka_install_link_dir }}'
    state: link

- name: include kafka in the default path
  become: yes
  become_user: root
  with_items:
    - d: /etc/profile.d
      f: kafka.sh
  template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m|default("0644") }}'

- name: generate server.properties
  become: yes
  become_user: root
  template:
    src: "server.properties.j2"
    dest: "{{ kafka_install_dir }}/config/server.properties"
    mode: 0644
  register: config_update
  tags: kafka_config

- name: configure system kafka to use systemd
  include_tasks: 'systemd.yml'
  when: kafka_use_systemd

- name:
  service:
    name: kafka
    enabled: yes
    state: restarted
  when: kafka_use_systemd and config_update is changed
  tags: kafka_config